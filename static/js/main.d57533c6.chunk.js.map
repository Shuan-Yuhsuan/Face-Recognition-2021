{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Logo/brain.png","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/FaceRecognition/FaceRecognition.js","Components/SignIn/SignIn.js","Components/Register/Register.js","Components/Rank/Rank.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","tiltMaxAngleX","tiltMaxAngleY","height","width","alt","src","brain","ImageLinkForm","onInputChange","onPictureSubmit","type","onChange","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","name","React","Component","Register","onNameChange","Rank","entries","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d57533c6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({onRouteChange, isSignedIn}) => {\n    if(isSignedIn) {\n        return(\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n            </nav>\n        );\n    } else {\n        return(\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n            </nav>\n        );\n    }\n    \n}\n\n\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.85839113.png\";","import React from 'react';\nimport Tilt from 'react-parallax-tilt';\nimport brain from './brain.png';\nimport './Logo.css';\n\nconst Logo = () => {\n    return (\n        <div className='ma4 mt0'>\n            <Tilt className='br2 shadow-2 pa3' tiltMaxAngleX='35' tiltMaxAngleY='35' style={{height: '150px', width: '150px'}}>\n                <div>\n                    <img alt='logo' src={brain}></img>\n                </div>\n            </Tilt>\n        </div>\n    );\n}\n\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({onInputChange, onPictureSubmit}) => {\n    return (\n        <div>\n            <p className='f3'>\n                {'This Magic Brain will detect faces in your pictures. Give it a try!'}\n            </p>\n            <div className='center'>  {/* create a class in App.js to put children elements in one line */}\n                <div className='form center pa4 br3 shadow-5'>  {/* wrap the elements below with another <div> to narrow them down, otherwise they'll span the entire screen */}\n                    <input \n                        type='tex' className='f4 pa2 w-70 center' \n                        onChange={onInputChange}/>\n                    <button \n                        className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\n                        onClick={onPictureSubmit}\n                        >Detect</button>  {/* the things in 'className' are tachyons styles */}\n                    {/* create a style --  button {cursor: pointer} -- in \"Index.css\" */}\n                    {/* onClick: REACT sytax mimicking html */}\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default ImageLinkForm;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({imageUrl, box}) => {\n    return (\n        <div className='center ma'>   {/* 'center' is defined in the css file */}\n            <div className='absolute mt2'>\n                <img id='inputImage' alt='' src={imageUrl} width='500px' height='auto'/>\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n            </div>\n        </div>\n    );\n}\n\nexport default FaceRecognition;","import React from 'react';\n\n// Since we need to process the signin procedure, we turned this component into a child REACT app\nclass SignIn extends React.Component{\n    constructor(props){ // pass the (props) here so that it can be used in the onSubmitSignIn function\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: ''\n        }\n    }\n\n    // to receive the email input by updating the state\n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value})\n    }\n    \n    // to receive the password input by updating the state\n    onPasswordChange = (event) => {\n        this.setState({signInPassword: event.target.value})\n    }\n\n    // to send the signin input stored in the state to the backend server\n    onSubmitSignIn = () => {\n        fetch('https://friendly-chesterfield-45678.herokuapp.com/signin', {\n            // this is not the default GET request, so we need this second argument\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {  // does the user exist? Did we receive a user with a property of id?\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');   // if login successfully, redirect to home page\n                }\n            })\n    }\n\n    render(){   // render() is a required syntax of REACT component\n        const { onRouteChange } = this.props;   // to receive the onRouteChange function/props from the parent file\n        return(\n            // the container card borrowed from https://tachyons.io/components/cards/product-card/index.html\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                {/* the sign in form borrowed from https://tachyons.io/components/forms/sign-in/index.html */}\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input \n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    type=\"email\" \n                                    name=\"email-address\"  \n                                    id=\"email-address\"\n                                    onChange={this.onEmailChange}   // to pass the Email input to the state\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input \n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    type=\"password\" \n                                    name=\"password\"  \n                                    id=\"password\"\n                                    onChange={this.onPasswordChange}   // to pass the Password input to the state\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input \n                                onClick={this.onSubmitSignIn}   // call the onSubmitSignIn function defined above\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                                type=\"submit\" \n                                value=\"Sign in\"\n                            />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n                        </div>\n                    </div>\n                </main>\n            </article>\n        );    \n    }\n    \n}\n\nexport default SignIn;","import React from 'react';\n\nclass Register extends React.Component {\n    constructor(props){ // pass the (props) here so that it can be used in the onSubmitSignIn function\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n\n    // to receive the email input by updating the state\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    }\n    \n    // to receive the password input by updating the state\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    }\n\n    // to receive the name input by updating the state\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n\n    // to send the signin input stored in the state to the backend server\n    onSubmitSignIn = () => {\n        fetch('https://friendly-chesterfield-45678.herokuapp.com/register', {\n            // this is not the default GET request, so we need this second argument\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n            .then(response => response.json())\n            .then(user => {     // recall that the server returns the user data when they register\n                if (user.id) {     // the backend server returns either a user or an error, check if the response has an id to see if they've registered successfully\n                    this.props.loadUser(user)\n                    this.props.onRouteChange('home');   // if login successfully, redirect to home page\n                }\n            })\n    }\n\n    render() {\n        return(\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                                <input \n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    type=\"text\" \n                                    name=\"name\"  \n                                    id=\"name\"\n                                    onChange={this.onNameChange}\n                                />\n                            </div>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input \n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    type=\"email\" \n                                    name=\"email-address\"  \n                                    id=\"email-address\"\n                                    onChange={this.onEmailChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input \n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    type=\"password\" \n                                    name=\"password\"  \n                                    id=\"password\"\n                                    onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input \n                                onClick={this.onSubmitSignIn}\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                                type=\"submit\" \n                                value=\"Register\"\n                            />\n                        </div>\n                        \n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\nexport default Register;","import React from 'react';\n\nconst Rank = ({name, entries}) => {\n    return (\n        <div>\n            <div className='white f3'>\n                {`${name}, your current entry count is ...`}\n            </div>\n            <div className='white f1'>\n                {entries}\n            </div>\n        </div>\n    );\n}\n\nexport default Rank;","import React, {Component} from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo'; \nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport Rank from './Components/Rank/Rank';\n// import Particles from \"react-tsparticles\";\nimport './App.css';\n\n\n// Reset to this default state when signed out\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box:{},\n  route: 'signin',\n  isSignedIn: false,\n  user: {       // to show the user profile\n    id: '',\n    name:'',\n    email:'',\n    entries: 0,\n    joined: ''\n  }\n};\n\n// the main app\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box:{},\n      route: 'signin',\n      isSignedIn: false,\n      user: {       // to show the user profile\n        id: '',\n        name:'',\n        email:'',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  loadUser = (data) => {\n    this.setState( {user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n  // For demonstration, deleted by the instructor\n  // componentDidMount(){\n  //   fetch('http://localhost:3000')\n  //   .then(response => response.json())\n  //   .then(console.log)\n  // }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log('calculateFaceLocation', width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log('displayFaceBox', box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  // Takes in the url input as a state -> pass it to the Clarifai API\n  onPictureSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    \n    // fetch the backend and call the Clarifai API there (for security concern, so process the API key in the backend)\n    fetch('https://friendly-chesterfield-45678.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())  // Remember to .json() the response when we use FETCH!\n    .then(response => {\n      if (response) {     // if face is detected\n        fetch('https://friendly-chesterfield-45678.herokuapp.com/image', {  // send the user.id to the server, and get his/her entries as response -> setState\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n            // this is the way to update just one value of the user object, instead of overwrite it entirely\n          })\n          .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))})\n    .catch(err => console.log(err)\n    )\n  }\n\n  onRouteChange = (route) => {\n    // if (route === 'signout'){\n    //   this.setState(initialState)\n    // } else if (route === 'home'){\n    //   this.setState({isSignedIn: true})\n    // }\n    // this.setState({route: route})\n\n    if (route === 'signin'){\n      // this.setState(initialState)\n      this.setState(initialState)\n      console.log('if route === signin')\n    } else if (route === 'register'){\n      this.setState(initialState)\n      console.log('elif route === register')\n    } else {\n      this.setState({isSignedIn: true})\n      console.log('else')\n    }\n    this.setState({route: route});\n\n    console.log('route: ', route);\n    console.log('this.state.route: ', this.state.route);\n    console.log('this.state: ', this.state);\n    \n  }\n\n  render() {\n    const {isSignedIn, imageUrl, route, box} = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        {route === 'home'  // if statement\n        ? <div>                         {/* then */}\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onPictureSubmit={this.onPictureSubmit} \n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n        : (                              // else if\n          route === 'signin'\n          ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n          ) \n        }\n        </div>\n    );\n}\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}